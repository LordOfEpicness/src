// Date: 3/10/2013 11:11:08 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package MHF.Model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelBBQSpit extends ModelBase
{
  //fields
    ModelRenderer Base;
    ModelRenderer Bar1;
    ModelRenderer Bar3;
    ModelRenderer Bar2;
    ModelRenderer Bar4;
    ModelRenderer RightStand;
    ModelRenderer LeftStand;
    ModelRenderer Spit;
    ModelRenderer Handle;
    ModelRenderer SpitConnect;
    ModelRenderer OutMeat;
    ModelRenderer InMeat;
    ModelRenderer Log1;
    ModelRenderer Log2;
    ModelRenderer Log3;
    ModelRenderer Log4;
  
  public ModelBBQSpit()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      Base = new ModelRenderer(this, 0, 0);
      Base.addBox(0F, 0F, 0F, 16, 3, 16);
      Base.setRotationPoint(-8F, 21F, -8F);
      Base.setTextureSize(64, 32);
      Base.mirror = true;
      setRotation(Base, 0F, 0F, 0F);
      Bar1 = new ModelRenderer(this, 12, 41);
      Bar1.addBox(0F, 0F, 0F, 7, 3, 3);
      Bar1.setRotationPoint(-3.5F, 18F, -7F);
      Bar1.setTextureSize(64, 32);
      Bar1.mirror = true;
      setRotation(Bar1, 0F, 0F, 0F);
      Bar3 = new ModelRenderer(this, 12, 41);
      Bar3.addBox(0F, 0F, 0F, 7, 3, 3);
      Bar3.setRotationPoint(-3.5F, 18F, 4F);
      Bar3.setTextureSize(64, 32);
      Bar3.mirror = true;
      setRotation(Bar3, 0F, 0F, 0F);
      Bar2 = new ModelRenderer(this, 12, 47);
      Bar2.addBox(0F, 0F, 0F, 3, 3, 14);
      Bar2.setRotationPoint(-6.5F, 18F, -7F);
      Bar2.setTextureSize(64, 32);
      Bar2.mirror = true;
      setRotation(Bar2, 0F, 0F, 0F);
      Bar4 = new ModelRenderer(this, 12, 47);
      Bar4.addBox(0F, 0F, 0F, 3, 3, 14);
      Bar4.setRotationPoint(3.5F, 18F, -7F);
      Bar4.setTextureSize(64, 32);
      Bar4.mirror = true;
      setRotation(Bar4, 0F, 0F, 0F);
      RightStand = new ModelRenderer(this, 0, 45);
      RightStand.addBox(0F, 0F, 0F, 3, 16, 3);
      RightStand.setRotationPoint(-7.5F, 8F, -1.5F);
      RightStand.setTextureSize(64, 32);
      RightStand.mirror = true;
      setRotation(RightStand, 0F, 0F, 0F);
      LeftStand = new ModelRenderer(this, 0, 45);
      LeftStand.addBox(0F, 0F, 0F, 3, 16, 3);
      LeftStand.setRotationPoint(4.5F, 8F, -1.5F);
      LeftStand.setTextureSize(64, 32);
      LeftStand.mirror = true;
      setRotation(LeftStand, 0F, 0F, 0F);
      Spit = new ModelRenderer(this, 64, 0);
      Spit.addBox(0F, -0.5F, -0.5F, 18, 1, 1);
      Spit.setRotationPoint(-7F, 11F, 0F);
      Spit.setTextureSize(64, 32);
      Spit.mirror = true;
      setRotation(Spit, 0F, 0F, 0F);
      Handle = new ModelRenderer(this, 89, 7);
      Handle.addBox(18F, 3.5F, -0.5F, 4, 1, 1);
      Handle.setRotationPoint(-7F, 11F, 0F);
      Handle.setTextureSize(64, 32);
      Handle.mirror = true;
      setRotation(Handle, 0F, 0F, 0F);
      SpitConnect = new ModelRenderer(this, 85, 4);
      SpitConnect.addBox(17F, 0.5F, -0.5F, 1, 4, 1);
      SpitConnect.setRotationPoint(-7F, 11F, 0F);
      SpitConnect.setTextureSize(64, 32);
      SpitConnect.mirror = true;
      setRotation(SpitConnect, 0F, 0F, 0F);
      OutMeat = new ModelRenderer(this, 64, 10);
      OutMeat.addBox(4.5F, -2F, -2F, 5, 4, 4);
      OutMeat.setRotationPoint(-7F, 11F, 0F);
      OutMeat.setTextureSize(64, 32);
      OutMeat.mirror = true;
      setRotation(OutMeat, 0F, 0F, 0F);
      InMeat = new ModelRenderer(this, 64, 4);
      InMeat.addBox(3.5F, -1.5F, -1.5F, 7, 3, 3);
      InMeat.setRotationPoint(-7F, 11F, 0F);
      InMeat.setTextureSize(64, 32);
      InMeat.mirror = true;
      setRotation(InMeat, 0F, 0F, 0F);
      Log1 = new ModelRenderer(this, 0, 21);
      Log1.addBox(-1F, -1F, 0F, 3, 3, 5);
      Log1.setRotationPoint(-3F, 20F, 4F);
      Log1.setTextureSize(128, 64);
      Log1.mirror = true;
      setRotation(Log1, 0.5235988F, 2.530727F, 0F);
      Log2 = new ModelRenderer(this, 0, 21);
      Log2.addBox(-1F, -1F, 0F, 3, 3, 5);
      Log2.setRotationPoint(-3F, 20F, -3F);
      Log2.setTextureSize(128, 64);
      Log2.mirror = true;
      setRotation(Log2, 0.5235988F, 0.7853982F, 0F);
      Log3 = new ModelRenderer(this, 0, 21);
      Log3.addBox(-1F, -1F, 0F, 3, 3, 5);
      Log3.setRotationPoint(3F, 20F, -3F);
      Log3.setTextureSize(128, 64);
      Log3.mirror = true;
      setRotation(Log3, 0.5235988F, -0.7853982F, 0F);
      Log4 = new ModelRenderer(this, 0, 21);
      Log4.addBox(-1F, -1F, 0F, 3, 3, 5);
      Log4.setRotationPoint(3F, 20F, 4F);
      Log4.setTextureSize(128, 64);
      Log4.mirror = true;
      setRotation(Log4, 0.5235988F, -2.530727F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    Base.render(f5);
    Bar1.render(f5);
    Bar3.render(f5);
    Bar2.render(f5);
    Bar4.render(f5);
    RightStand.render(f5);
    LeftStand.render(f5);
    Spit.render(f5);
    Handle.render(f5);
    SpitConnect.render(f5);
    OutMeat.render(f5);
    InMeat.render(f5);
    Log1.render(f5);
    Log2.render(f5);
    Log3.render(f5);
    Log4.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void renderAll() {
	  Base.render(0.0625F);
	  Bar1.render(0.0625F);
	  Bar2.render(0.0625F);
	  Bar3.render(0.0625F);
	  Bar4.render(0.0625F);
	  RightStand.render(0.0625F);
	  LeftStand.render(0.0625F);
	  Spit.render(0.0625F);
	  Handle.render(0.0625F);
	  SpitConnect.render(0.0625F);
	  Log1.render(0.0625F);
	  Log2.render(0.0625F);
	  Log3.render(0.0625F);
	  Log4.render(0.0625F);
	  OutMeat.render(0.0625F);
	  InMeat.render(0.0625F);
	}

}
