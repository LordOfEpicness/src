// Date: 3/6/2013 9:50:37 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package MHF.Model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelFelyne extends ModelBase
{
  //fields
    public ModelRenderer head;
    ModelRenderer Piece1;
    ModelRenderer Piece2;
    ModelRenderer Piece3;
    ModelRenderer nose;
    ModelRenderer rightear;
    ModelRenderer leftear;
    ModelRenderer body;
    public ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer leftleg;
    ModelRenderer tail;
    ModelRenderer pack;
  
  public ModelFelyne()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-3F, -6F, -3F, 6, 6, 6);
      head.setRotationPoint(-0.5F, 9F, 0F);
      head.setTextureSize(64, 32);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
    Piece1 = new ModelRenderer(this, "Piece1");
    Piece1.setRotationPoint(-0.5F, 9F, 0F);
    setRotation(Piece1, 0F, 0F, 0F);
    Piece1.mirror = true;
    Piece2 = new ModelRenderer(this, "Piece2");
    Piece2.setRotationPoint(-0.5F, 9F, 0F);
    setRotation(Piece2, 0F, 0F, 0F);
    Piece2.mirror = true;
    Piece3 = new ModelRenderer(this, "Piece3");
    Piece3.setRotationPoint(-0.5F, 9F, 0F);
    setRotation(Piece3, 0F, 0F, 0F);
    Piece3.mirror = true;
      nose = new ModelRenderer(this, 0, 28);
      nose.addBox(-1.5F, -2F, -4F, 3, 2, 1);
      nose.setRotationPoint(-0.5F, 9F, 0F);
      nose.setTextureSize(64, 32);
      nose.mirror = true;
      setRotation(nose, 0F, 0F, 0F);
      rightear = new ModelRenderer(this, 10, 29);
      rightear.addBox(-2F, -8F, -1F, 2, 2, 1);
      rightear.setRotationPoint(-0.5F, 9F, 0F);
      rightear.setTextureSize(64, 32);
      rightear.mirror = true;
      setRotation(rightear, 0F, 0F, -0.1396263F);
      leftear = new ModelRenderer(this, 10, 29);
      leftear.addBox(0F, -8F, -1F, 2, 2, 1);
      leftear.setRotationPoint(-0.5F, 9F, 0F);
      leftear.setTextureSize(64, 32);
      leftear.mirror = true;
      setRotation(leftear, 0F, 0F, 0.1396263F);
      body = new ModelRenderer(this, 16, 16);
      body.addBox(-3.5F, 0F, -2F, 7, 8, 4);
      body.setRotationPoint(-0.5F, 9F, 0F);
      body.setTextureSize(64, 32);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      rightarm = new ModelRenderer(this, 40, 16);
      rightarm.addBox(-3F, -1F, -1.5F, 3, 7, 3);
      rightarm.setRotationPoint(-4F, 10F, 0F);
      rightarm.setTextureSize(64, 32);
      rightarm.mirror = true;
      setRotation(rightarm, 0F, 0F, 0F);
      leftarm = new ModelRenderer(this, 40, 16);
      leftarm.addBox(-1F, -1F, -1.5F, 3, 7, 3);
      leftarm.setRotationPoint(4F, 10F, 0F);
      leftarm.setTextureSize(64, 32);
      leftarm.mirror = true;
      setRotation(leftarm, 0F, 0F, 0F);
      rightleg = new ModelRenderer(this, 0, 16);
      rightleg.addBox(-1.5F, 0F, -1.5F, 3, 7, 3);
      rightleg.setRotationPoint(-2.5F, 17F, -0.5F);
      rightleg.setTextureSize(64, 32);
      rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 0, 16);
      leftleg.addBox(-1.5F, 0F, -1.5F, 3, 7, 3);
      leftleg.setRotationPoint(1.5F, 17F, -0.5F);
      leftleg.setTextureSize(64, 32);
      leftleg.mirror = true;
      setRotation(leftleg, 0F, 0F, 0F);
      tail = new ModelRenderer(this, 24, 0);
      tail.addBox(-1F, -1F, 0F, 2, 2, 8);
      tail.setRotationPoint(-0.5F, 16F, 0F);
      tail.setTextureSize(64, 32);
      tail.mirror = true;
      setRotation(tail, -0.2094395F, 0F, 0F);
      pack = new ModelRenderer(this, 44, 0);
      pack.addBox(-3F, 0F, 0F, 6, 4, 4);
      pack.setRotationPoint(-0.5F, 15F, 2F);
      pack.setTextureSize(64, 32);
      pack.mirror = true;
      setRotation(pack, 1.308997F, 0F, 0F);
  }
  
  public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
  {
	super.render(par1Entity, par2, par3, par4, par5, par6, par7);
	setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
    head.render(par7);
    Piece1.render(par7);
    Piece2.render(par7);
    Piece3.render(par7);
    nose.render(par7);
    rightear.render(par7);
    leftear.render(par7);
    body.render(par7);
    rightarm.render(par7);
    leftarm.render(par7);
    rightleg.render(par7);
    leftleg.render(par7);
    tail.render(par7);
    pack.render(par7);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
  {
    super.setRotationAngles(par1, par2, par3, par4, par5, par6, par7Entity);
    this.head.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.head.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.nose.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.nose.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.rightear.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.leftear.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.leftear.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.rightear.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.rightarm.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 2.0F * par2 * 0.5F;
    this.leftarm.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 2.0F * par2 * 0.5F;
    this.rightleg.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
    this.leftleg.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
    this.tail.rotateAngleY = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.1F * par2;
    this.pack.rotateAngleZ = MathHelper.cos(par1 * 0.3662F + (float)Math.PI) * 0.5F * par2;
  }

}
