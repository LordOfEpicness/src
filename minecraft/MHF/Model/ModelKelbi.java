// Date: 3/16/2013 4:25:49 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package MHF.Model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelKelbi extends ModelBase
{
  //fields
    ModelRenderer Rhorn;
    ModelRenderer Lhorn;
    ModelRenderer RbaseHorn;
    ModelRenderer LbaseHorn;
    ModelRenderer eyes;
    ModelRenderer mouth;
    ModelRenderer neck;
    ModelRenderer body;
    ModelRenderer leg4;
    ModelRenderer leg2;
    ModelRenderer leg3;
    ModelRenderer leg1;
    ModelRenderer tail;
  
  public ModelKelbi()
  {
    textureWidth = 128;
    textureHeight = 32;
    
      Rhorn = new ModelRenderer(this, 0, 14);
      Rhorn.addBox(-2F, -10F, 1F, 1, 2, 1);
      Rhorn.setRotationPoint(-1F, 1F, -6.5F);
      Rhorn.setTextureSize(64, 32);
      Rhorn.mirror = true;
      setRotation(Rhorn, 0F, 0F, 0F);
      Lhorn = new ModelRenderer(this, 0, 14);
      Lhorn.addBox(1F, -10F, 1F, 1, 2, 1);
      Lhorn.setRotationPoint(-1F, 1F, -6.5F);
      Lhorn.setTextureSize(64, 32);
      Lhorn.mirror = true;
      setRotation(Lhorn, 0F, 0F, 0F);
      RbaseHorn = new ModelRenderer(this, 0, 9);
      RbaseHorn.addBox(-2.5F, -8F, 0F, 2, 3, 2);
      RbaseHorn.setRotationPoint(-1F, 1F, -6.5F);
      RbaseHorn.setTextureSize(64, 32);
      RbaseHorn.mirror = true;
      setRotation(RbaseHorn, 0F, 0F, 0F);
      LbaseHorn = new ModelRenderer(this, 0, 9);
      LbaseHorn.addBox(0.5F, -8F, 0F, 2, 3, 2);
      LbaseHorn.setRotationPoint(-1F, 1F, -6.5F);
      LbaseHorn.setTextureSize(64, 32);
      LbaseHorn.mirror = true;
      setRotation(LbaseHorn, 0F, 0F, 0F);
      eyes = new ModelRenderer(this, 36, 0);
      eyes.addBox(-3.5F, -5F, -2.5F, 7, 4, 6);
      eyes.setRotationPoint(-1F, 1F, -6.5F);
      eyes.setTextureSize(64, 32);
      eyes.mirror = true;
      setRotation(eyes, 0F, 0F, 0F);
      mouth = new ModelRenderer(this, 60, 1);
      mouth.addBox(-3.5F, -1F, -5.5F, 7, 4, 9);
      mouth.setRotationPoint(-1F, 1F, -6.5F);
      mouth.setTextureSize(64, 32);
      mouth.mirror = true;
      setRotation(mouth, 0F, 0F, 0F);
      neck = new ModelRenderer(this, 92, 0);
      neck.addBox(-2.5F, -8F, -1F, 5, 8, 5);
      neck.setRotationPoint(-1F, 12F, -8F);
      neck.setTextureSize(64, 32);
      neck.mirror = true;
      setRotation(neck, 0F, 0F, 0F);
      body = new ModelRenderer(this, 0, 0);
      body.addBox(-4.5F, -1F, 0F, 9, 9, 18);
      body.setRotationPoint(-1F, 6F, -8F);
      body.setTextureSize(64, 32);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      leg4 = new ModelRenderer(this, 54, 14);
      leg4.addBox(-2F, 0F, -2F, 4, 10, 4);
      leg4.setRotationPoint(1.5F, 14F, -6F);
      leg4.setTextureSize(64, 32);
      leg4.mirror = true;
      setRotation(leg4, 0F, 0F, 0F);
      leg2 = new ModelRenderer(this, 54, 14);
      leg2.addBox(-2F, 0F, -2F, 4, 10, 4);
      leg2.setRotationPoint(1.5F, 14F, 8F);
      leg2.setTextureSize(64, 32);
      leg2.mirror = true;
      setRotation(leg2, 0F, 0F, 0F);
      leg3 = new ModelRenderer(this, 54, 14);
      leg3.addBox(-2F, 0F, -2F, 4, 10, 4);
      leg3.setRotationPoint(-3.5F, 14F, -6F);
      leg3.setTextureSize(64, 32);
      leg3.mirror = true;
      setRotation(leg3, 0F, 0F, 0F);
      leg1 = new ModelRenderer(this, 54, 14);
      leg1.addBox(-2F, 0F, -2F, 4, 10, 4);
      leg1.setRotationPoint(-3.5F, 14F, 8F);
      leg1.setTextureSize(64, 32);
      leg1.mirror = true;
      setRotation(leg1, 0F, 0F, 0F);
      tail = new ModelRenderer(this, 0, 0);
      tail.addBox(-1F, 0F, 0F, 2, 2, 4);
      tail.setRotationPoint(-1F, 5F, 10F);
      tail.setTextureSize(64, 32);
      tail.mirror = true;
      setRotation(tail, -0.3490659F, 0F, 0F);
  }

  public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
  {
	super.render(par1Entity, par2, par3, par4, par5, par6, par7);
	setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
    Rhorn.render(par7);
    Lhorn.render(par7);
    RbaseHorn.render(par7);
    LbaseHorn.render(par7);
    eyes.render(par7);
    mouth.render(par7);
    neck.render(par7);
    body.render(par7);
    leg4.render(par7);
    leg2.render(par7);
    leg3.render(par7);
    leg1.render(par7);
    tail.render(par7);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
  {
    super.setRotationAngles(par1, par2, par3, par4, par5, par6, par7Entity);   
    this.Lhorn.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.Lhorn.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.Rhorn.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.Rhorn.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.LbaseHorn.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.LbaseHorn.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.RbaseHorn.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.RbaseHorn.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.eyes.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.eyes.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.mouth.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.mouth.rotateAngleX = par5 / (180F / (float)Math.PI);    
    this.leg1.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
    this.leg2.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
    this.leg3.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
    this.leg4.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
    this.tail.rotateAngleX = -0.5F;
  }

}
